{"version":3,"file":"index.mjs","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport getOwnPropertySymbols from '@stdlib/utils-property-symbols' ;\nimport getPrototypeOf from '@stdlib/utils-get-prototype-of' ;\nimport isEnumerableProperty from '@stdlib/assert-is-enumerable-property' ;\nimport hasOwnProp from '@stdlib/assert-has-own-property' ;\nimport Object from '@stdlib/object-ctor' ;\n\n\n// MAIN //\n\n/**\n* Returns an array of an object's own and inherited enumerable symbol properties.\n*\n* @param {*} value - input object\n* @returns {Array} a list of own and inherited enumerable symbol properties\n*\n* @example\n* var symbols = enumerablePropertySymbolsIn( {} );\n*/\nfunction enumerablePropertySymbolsIn( value ) { // eslint-disable-line id-length\n\tvar symbols;\n\tvar cache;\n\tvar obj;\n\tvar tmp;\n\tvar k;\n\tvar i;\n\n\tif ( value === null || value === void 0 ) {\n\t\treturn [];\n\t}\n\t// Cast the value to an object:\n\tobj = Object( value );\n\n\t// Walk the prototype chain collecting enumerable symbol properties...\n\tsymbols = [];\n\tcache = {};\n\tdo {\n\t\ttmp = getOwnPropertySymbols( obj );\n\t\tfor ( i = 0; i < tmp.length; i++ ) {\n\t\t\tk = tmp[ i ];\n\t\t\tif (\n\t\t\t\thasOwnProp( cache, k ) === false && // guards against processing a symbol more than once\n\t\t\t\tisEnumerableProperty( obj, k )\n\t\t\t) {\n\t\t\t\tsymbols.push( k );\n\t\t\t}\n\t\t\tcache[ k ] = true;\n\t\t}\n\t\tobj = getPrototypeOf( obj );\n\t} while ( obj );\n\n\treturn symbols;\n}\n\n\n// EXPORTS //\n\nexport default enumerablePropertySymbolsIn;\n"],"names":["enumerablePropertySymbolsIn","value","symbols","cache","obj","tmp","k","i","Object","getOwnPropertySymbols","length","hasOwnProp","isEnumerableProperty","push","getPrototypeOf"],"mappings":";;scAwCA,SAASA,EAA6BC,GACrC,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,GAAKN,QACJ,MAAO,GAGRG,EAAMI,EAAQP,GAGdC,EAAU,GACVC,EAAQ,GACR,EAAG,CAEF,IADAE,EAAMI,EAAuBL,GACvBG,EAAI,EAAGA,EAAIF,EAAIK,OAAQH,IAC5BD,EAAID,EAAKE,IAEmB,IAA3BI,EAAYR,EAAOG,IACnBM,EAAsBR,EAAKE,IAE3BJ,EAAQW,KAAMP,GAEfH,EAAOG,IAAM,EAEdF,EAAMU,EAAgBV,SACbA,GAEV,OAAOF"}